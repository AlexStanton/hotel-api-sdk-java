/**
 * Autogenerated code by SdkModelGenerator.
 * Do not edit. Any modification on this file will be removed automatically after project build
 *
 */
package com.hotelbeds.hotelapimodel.auto.annotation.validators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import com.hotelbeds.hotelapimodel.auto.model.Filter;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class ValidLimitFilterValidator implements ConstraintValidator<ValidLimitFilter, Filter> {
    @Override
    public void initialize(final ValidLimitFilter constraintAnnotation) {
        // empty method
    }

    @Override
    public boolean isValid(final Filter filter, final ConstraintValidatorContext context) {
        boolean result = true;
        if (filter != null) {
            if (filter.getMinRate() != null && filter.getMaxRate() != null && filter.getMinRate().compareTo(filter.getMaxRate()) > 0) {
                context.buildConstraintViolationWithTemplate("{com.hotelbeds.Filter.rate.message}").addConstraintViolation();
                result = false;
                log.info("maxRate should be higher or equals than minRate" + " , filter: " + filter.toString());
            } else if (filter.getMinCategory() != null && filter.getMaxCategory() != null && filter.getMinCategory() > filter.getMaxCategory()) {
                context.disableDefaultConstraintViolation();
                context.buildConstraintViolationWithTemplate("{com.hotelbeds.Filter.category.range.message}").addConstraintViolation();
                result = false;
                log.info("maxCategory should be higher or equals than minCategory" + " , filter: " + filter.toString());
            }
        }
        return result;
    }
}
