/**
 * Autogenerated code by SdkModelGenerator.
 * Do not edit. Any modification on this file will be removed automatically after project build
 *
 */
package com.hotelbeds.distribution.hotel_api_model.auto.annotation.validators;

/*
 * #%L
 * hotel-api-model
 * %%
 * Copyright (C) 2015 HOTELBEDS, S.L.U.
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 2.1 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-2.1.html>.
 * #L%
 */


import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import com.hotelbeds.distribution.hotel_api_model.auto.model.ReviewFilter;

public class ValidReviewFilterValidator implements ConstraintValidator<ValidReviewFilter, List<ReviewFilter>> {


    @Override
    public void initialize(ValidReviewFilter constraintAnnotation) {
        // TODO Auto-generated method stub
    }

    @Override
    public boolean isValid(List<ReviewFilter> value, ConstraintValidatorContext context) {
        context.disableDefaultConstraintViolation();
        boolean result = true;
        if (value != null) {
            for (ReviewFilter review : value) {
                if (review.getMaxRate() == null && review.getMinRate() == null) {
                    context.buildConstraintViolationWithTemplate(
                        "{com.hotelbeds.distribution.hotel_api_webapp.webapp.api.model.ReviewFilter.rates.null.message}").addConstraintViolation();
                    result = false;
                } else if (result && review.getMaxRate() != null && review.getMinRate() != null
                    && (review.getMaxRate().compareTo(review.getMinRate()) < 0)) {
                    context.buildConstraintViolationWithTemplate(
                        "{com.hotelbeds.distribution.hotel_api_webapp.webapp.api.model.ReviewFilter.rates.value.message}").addConstraintViolation();
                    result = false;
                }
                if (review.getMinReviewCount() != null && review.getMinReviewCount() == 0) {
                    context.buildConstraintViolationWithTemplate(
                        "{com.hotelbeds.distribution.hotel_api_webapp.webapp.api.model.ReviewFilter.reviewCounts.zero.message}")
                        .addConstraintViolation();
                    result = false;
                }
            }
        }
        return result;
    }

}
